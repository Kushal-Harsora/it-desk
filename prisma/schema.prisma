// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" 
  url      = env("DATABASE_URL")
}

model Ticket {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  priority    Priority
  status      Status      @default(OPEN)
  attachment  String?     
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  comments    Comment[]   
  technician  Technician? @relation(fields: [technicianId], references: [id])
  technicianId Int?
  user        User?        @relation("UserTickets", fields: [userId], references: [id])
  userId      Int? 
}

model Comment {
  id        Int      @id @default(autoincrement())
  message   String
  createdAt DateTime @default(now())
  
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  ticketId  Int

  authorTech Technician? @relation(fields: [authorTechId], references: [id])
  authorTechId Int?
  authorUser  User?      @relation("UserComments", fields: [authorUserId], references: [id])
  authorUserId  Int? 
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  tickets   Ticket[]  @relation("UserTickets")   // Tickets created by user
  comments  Comment[] @relation("UserComments")  // Comments written by user
  role      String @default("User")
}


model Technician {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  comments  Comment[]
  tickets   Ticket[]
  role      String @default("Technician")
}

model Admin {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  createdAt DateTime @default(now())
  role      String @default("Admin")
}

model Superadmin  {
  id        Int @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  role      String @default("Superadmin")
}

enum Role {
  USER
  ADMIN
  TECHNICIAN
  SUPERADMIN
  User
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}



enum Status {
  OPEN
  IN_PROGRESS
  RESOLVED
  CLOSED
}


